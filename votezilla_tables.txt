Great article on writing demographic questions!: https://www.surveygizmo.com/survey-blog/how-to-write-better-demographic-questions/
Pew Research:                                    http://www.pewresearch.org/files/2015/03/Demographic-Questions-Web-and-Mail-English-3-20-2015.pdf

CREATE SCHEMA votezilla;



CREATE TABLE votezilla.User (
    Id              SERIAL PRIMARY KEY,   
    Email           TEXT        UNIQUE NOT NULL, -- UNIQUE implies an index
    Username        TEXT        UNIQUE NOT NULL, -- UNIQUE implies an index
    PasswordHash    BIGINT[4]   UNIQUE NOT NULL, -- Store a 256-byte hash of the password   
    
    Name            TEXT,
    
    // Details
    Country         TEXT,
    Location		TEXT,
    
    BirthYear       INT,
    Gender          TEXT,
    Party           TEXT,
    Race            TEXT,
    Marital         TEXT,
    Schooling       TEXT,
    
    // Details - other field
    OtherGender     TEXT,
    OtherParty      TEXT,
    OtherRace       TEXT,
    
    // Verification status
    VerifiedEmail   BOOL        DEFAULT False
);

CREATE TABLE votezilla.Session (
	Id				BIGINT		PRIMARY KEY UNIQUE NOT NULL,
	SecureCookie 	BIGINT[3]	NOT NULL,
	UserId       	INTEGER		NOT NULL,
	Expiration 		TIMESTAMP	NOT NULL
);


--

CREATE TABLE Customer
CustomerId INTEGER PRIMARY KEY AUTO-INC
Address
Address2
City
State
ZipCode
(order least to most intrusive)
DOB (for age - just month and year.. or wait probablybneed day to for bkgd check)
PoliticalParty
Race
Religion
Gender
Marital Status
Highest College Degree
Income (/ yr)

CREATE TABLE Post
PostID INTEGER PRIMARY KEY AUTO-INC
DateTime
Title VARCHAR

CREATE TABLE LinkPost EXTENDS Post
LinkURL VARCHAR

CREATE TABLE BlogPost EXTENDS Post
Blog VARCHAR

CREATE TABLE PollPost EXTENDS Post
Question VARCHAR

CREATE TABLE Choice
Id
PollId
Text

CREATE TABLE Vote
Id
CustomerId
Date

CREATE TABLE Comment
CommentID INTEGER PRIMARY KEY AUTO-INC
DateTime
PostId FOREIGN KEY Post
CustomerId FOREIGN KEY Customer
ParentId FOREIGN KEY Comment
PrevRevisionId FOREIGN KEY Comment
Text VARCHAR(10,000)
MaterializedPath (4b,4b,2b,2b,2b,2b = 64 bits, so can use bitwise math!)  If stored MSB order, you can sort by it!
Tombstone BOOL
Checkbox - They have to consent to the public data lookup.
INDEX ParentId
INDEX MaterializedPath

CREATE TABLE Like
Direction: 1 or -1
CustomerId

T PostLike E Like
PostId

same forCommentLike


TODO:
create ancestor to Post and Comment, don't know the name, that has an Id and a datetime.