Great article on writing demographic questions!: https://www.surveygizmo.com/survey-blog/how-to-write-better-demographic-questions/
Pew Research:                                    http://www.pewresearch.org/files/2015/03/Demographic-Questions-Web-and-Mail-English-3-20-2015.pdf

\connect vz
SET client_encoding = 'UTF8';

CREATE DATABASE vz ENCODING 'UTF8';
CREATE SCHEMA vz;



CREATE TABLE vz.User (
    Id              BIGSERIAL   PRIMARY KEY,   
    Email           TEXT        UNIQUE NOT NULL, -- UNIQUE implies an index
    Username        TEXT        UNIQUE NOT NULL, -- UNIQUE implies an index
    PasswordHash    BIGINT[4]   NOT NULL,        -- Store a 256-byte hash of the password  
    
    Name            TEXT,
    
    -- Details
    Country         TEXT,
    Location        TEXT,
    -- TODO: ++ Language	TEXT.  Will default to "English (US)" if Country is "US".  Otherwise, will unhide a request for language, which was previously hidden by JQuery
    
    BirthYear       INT,
    Gender          TEXT,
    Party           TEXT,
    Race            TEXT,
    Marital         TEXT,
    Schooling       TEXT,
    
    -- Details - other field
    OtherGender     TEXT,
    OtherParty      TEXT,
    OtherRace       TEXT,
    
    -- Verification status
    VerifiedEmail   BOOL DEFAULT False
);

CREATE TABLE vz.Post (
    Id              BIGSERIAL         NOT NULL,
    UserId            BIGINT          NOT NULL,
    Created            TIMESTAMPTZ    NOT NULL DEFAULT now(),
    Title            TEXT             NOT NULL,
    VoteTally        INT              NOT NULL DEFAULT 0,

    Description        TEXT,            -- NewsPosts currently have this.  Also includes user's description of a link or poll, below the headline title.  Could appear in a zoomed in view.
    Category         TEXT,
    Language        TEXT,            
    Country            TEXT,   

    PRIMARY KEY (UserId, Id)
);

CREATE TABLE vz.LinkPost (
    LinkURL            TEXT NOT NULL,
    UrlToImage         TEXT,            
    ThumbnailStatus    INT DEFAULT 0
) INHERITS (vz.Post);

CREATE TABLE vz.BlogPost (
    Blog            TEXT		-- The actual blog article.  Text vs byte?  In this case, the description would give a preview or short summary in the zoomed in view.
) INHERITS (vz.Post);

-- TODO: CREATE TABLE PollPost (
    PollId
) INHERITS (vz.Post);

-- TODO: CREATE TABLE PollVote (
    Id
    VoteId
    UserId	
    PollId
)

CREATE TABLE vz.NewsPost (
    PublishedAt        TIMESTAMPTZ,      -- TODO?: can we get this from the article, for user-submitted posts, and then move this to Post?
    NewsSourceId    TEXT    NOT NULL,                  
      
    UNIQUE(PublishedAt, Title)           -- This constraint prevents duplicate articles News API updates.
) INHERITS (vz.LinkPost);


CREATE TABLE vz.PostVote (
    PostId            BIGINT        NOT NULL,
    UserId            BIGINT        NOT NULL,
    Up                BOOL          NOT NULL,
    Created            TIMESTAMPTZ  NOT NULL DEFAULT now(),
    UNIQUE(PostId, UserId)
);

-- FUNCTIONS
-- Gets the category based on the category and user's country of origin.
CREATE FUNCTION vz.GetCategory(category TEXT, country TEXT) RETURNS TEXT
    AS $$SELECT CASE WHEN $2 <> 'us' THEN 'world news'
                ELSE $1
                END;$$
    LANGUAGE SQL
    IMMUTABLE
    RETURNS NULL ON NULL INPUT;
    


DROP TABLE vz.xxx;

--

CREATE TABLE PollPost EXTENDS Post
Question VARCHAR

CREATE TABLE Choice
Id
PollId
Text

CREATE TABLE Vote
Id
CustomerId
Date

CREATE TABLE Comment
CommentID INTEGER PRIMARY KEY AUTO-INC
DateTime
PostId FOREIGN KEY Post
CustomerId FOREIGN KEY Customer
ParentId FOREIGN KEY Comment
PrevRevisionId FOREIGN KEY Comment
Text VARCHAR(10,000)
MaterializedPath (4b,4b,2b,2b,2b,2b = 64 bits, so can use bitwise math!)  If stored MSB order, you can sort by it!
Tombstone BOOL
INDEX ParentId
INDEX MaterializedPath

CREATE TABLE Like
Direction: 1 or -1
CustomerId

T PostLike E Like
PostId

same forCommentLike
